; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
lib_deps_external =
    h2zero/NimBLE-Arduino@^2.3.4
    Sensirion/Sensirion UPT Core@^0.6.0
BleAdvertisementSamples_srcdir = ${PROJECT_DIR}/examples/BleAdvertisementSamples/
BleGadgetWithSettings_srcdir = ${PROJECT_DIR}/examples/BleGadgetWithSettings/
board = esp32dev

[env]
platform = espressif32 @ ^6.11.0
framework = arduino
monitor_speed = 115200
build_flags =
    -std=gnu++17
build_unflags =
    -std=gnu++11
extra_scripts =
    pre:py_scripts/make_cpp_files.py
lib_deps =
    ${common.lib_deps_external}
lib_extra_dirs =
	${PROJECT_DIR}/src/*
check_tool = cppcheck, clangtidy
check_skip_packages = yes
check_flags=
    clangtidy: --style=file
    cppcheck: --suppress=unusedFunction
check_src_filters =
    +<${PROJECT_DIR}/src/>
    +<${PROJECT_DIR}/examples/>

[env:BleAdvertisementSamples]
build_src_filter = +<*> -<.git/> -<.svn/> +<${common.BleAdvertisementSamples_srcdir}>
board = ${common.board}
build_flags = ${env.build_flags} -DCORE_DEBUG_LEVEL=2

[env:BleGadgetWithSettings]
build_src_filter = +<*> -<.git/> -<.svn/> +<${common.BleGadgetWithSettings_srcdir}>
board = ${common.board}
build_flags = ${env.build_flags} -DCORE_DEBUG_LEVEL=2

[env:develop]
build_src_filter = +<*> -<.git/> -<.svn/> +<${common.BleAdvertisementSamples_srcdir}>
board = ${common.board}
monitor_filters = esp32_exception_decoder
build_type = debug
build_flags = ${env.build_flags} -DCORE_DEBUG_LEVEL=4
    ; Available are (in increasing order):
    ; * ESP_LOG_NONE    (0)
    ; * ESP_LOG_ERROR   (1)
    ; * ESP_LOG_WARN    (2)
    ; * ESP_LOG_INFO    (3)
    ; * ESP_LOG_DEBUG   (4)
    ; * ESP_LOG_VERBOSE (5)
    ; NOTE: the esp_log library includes some other means to control the log level,
    ;       but I am unable to get them to work. It seems the only way to reliably
    ;       control the log level is through this compiler flag, and to forgo any
    ;       of the esp_log_level_set() methods.

